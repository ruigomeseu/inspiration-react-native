fastlane_version "1.102.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  lane :beta do
    sigh

    increment_build_number(
      xcodeproj: "./ios/Inspiration.xcodeproj"
    )

    commit_version_bump(
      message: "Deployed new iOS build #{lane_context[SharedValues::BUILD_NUMBER]}",
      xcodeproj: './ios/Inspiration.xcodeproj'
    )

    gym(
      scheme: "Inspiration",
      project: "./ios/Inspiration.xcodeproj"
    )

    pilot
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end

platform :android do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Submit a new Beta Build to Play Store"
  lane :beta do
    gradle(task: 'clean', project_dir: "android/") # Clean the Gradle project
    gradle(task: "assemble", build_type: "Release", project_dir: "android/") # Build the Release APK
    supply(track: "beta", apk: "android/app/build/outputs/apk/app-release.apk") # Upload the APK to the Play Store (alpha)
  end

  after_all do |lane|
    # slack(channel: "deploys", message: "Successfully deployed a new Motivato alpha update to the Play Store.")
  end
end
